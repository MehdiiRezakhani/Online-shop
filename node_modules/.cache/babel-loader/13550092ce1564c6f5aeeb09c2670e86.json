{"ast":null,"code":"const initialState = {\n  selectedItems: [],\n  itemsCounter: 0,\n  total: 0,\n  checkout: false\n};\n\nconst sumItems = items => {\n  const itemsCounter = items.reduce((total, product) => total + product.quantity, 0);\n  let total = items.reduce((total, product) => total + product.price * product.quantity, 0).toFixed(2);\n  return {\n    itemsCounter,\n    total\n  };\n};\n\nconst cartReducer = (state = initialState, action) => {\n  console.log(action.type);\n\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      if (!state.selectedItems.find(item => item.id === action.payload.id)) {\n        state.selectedItems.push({ ...action.payload,\n          quantity: 1\n        });\n      }\n\n      return { ...state,\n        selectedItems: [...state.selectedItems],\n        ...sumItems(state.selectedItems),\n        checkout: false\n      };\n\n    case \"REMOVE_ITEM\":\n      const newSelectedItems = state.selectedItems.filter(item => item.id !== action.payload.id);\n      return { ...state,\n        selectedItems: [...newSelectedItems],\n        ...sumItems(newSelectedItems)\n      };\n\n    case \"INCREASE\":\n      const indexI = state.selectedItems.findIndex(item => item.id === action.payload.id);\n      state.selectedItems[indexI].quantity++;\n      return { ...state,\n        ...sumItems(state.selectedItems)\n      };\n\n    case \"DECREASE\":\n      const indexD = state.selectedItems.findIndex(item => item.id === action.payload.id);\n      state.selectedItems[indexD].quantity--;\n      return { ...state,\n        ...sumItems(state.selectedItems)\n      };\n\n    case \"CHECKOUT\":\n      return {\n        selectedItems: [],\n        itemsCounter: 0,\n        total: 0,\n        checkout: true\n      };\n\n    case \"CLEAR\":\n      return {\n        selectedItems: [],\n        itemsCounter: 0,\n        total: 0,\n        checkout: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/asus/Desktop/Practice/148- redux shopping cart - cart/redux-shopping-cart/src/redux/cart/cartReducer.js"],"names":["initialState","selectedItems","itemsCounter","total","checkout","sumItems","items","reduce","product","quantity","price","toFixed","cartReducer","state","action","console","log","type","find","item","id","payload","push","newSelectedItems","filter","indexI","findIndex","indexD"],"mappings":"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","sourcesContent":["const initialState = {\r\n    selectedItems: [],\r\n    itemsCounter: 0,\r\n    total: 0,\r\n    checkout: false\r\n}\r\n\r\nconst sumItems = items => {\r\n    const itemsCounter = items.reduce((total, product) => total + product.quantity, 0);\r\n    let total = items.reduce((total, product) => total + product.price * product.quantity, 0).toFixed(2);\r\n    return {itemsCounter, total}\r\n}\r\n\r\nconst cartReducer = (state=initialState, action) => {\r\n    console.log(action.type)\r\n    switch(action.type) {\r\n        case \"ADD_ITEM\":\r\n            if (!state.selectedItems.find(item => item.id === action.payload.id)) {\r\n                state.selectedItems.push({\r\n                    ...action.payload,\r\n                    quantity: 1\r\n                })\r\n            }\r\n            return {\r\n                ...state,\r\n                selectedItems: [...state.selectedItems],\r\n                ...sumItems(state.selectedItems),\r\n                checkout: false\r\n            }\r\n        case \"REMOVE_ITEM\":\r\n            const newSelectedItems = state.selectedItems.filter(item => item.id !== action.payload.id);\r\n            return {\r\n                ...state,\r\n                selectedItems: [...newSelectedItems],\r\n                ...sumItems(newSelectedItems)\r\n\r\n            }\r\n        case \"INCREASE\":\r\n            const indexI = state.selectedItems.findIndex(item => item.id === action.payload.id);\r\n            state.selectedItems[indexI].quantity++;\r\n            return {\r\n                ...state,\r\n                ...sumItems(state.selectedItems)\r\n\r\n            }\r\n        case \"DECREASE\":\r\n            const indexD = state.selectedItems.findIndex(item => item.id === action.payload.id);\r\n            state.selectedItems[indexD].quantity--;\r\n            return {\r\n                ...state,\r\n                ...sumItems(state.selectedItems)\r\n\r\n            }\r\n        case \"CHECKOUT\" :\r\n            return {\r\n                selectedItems: [],\r\n                itemsCounter: 0,\r\n                total: 0,\r\n                checkout: true\r\n            }\r\n        case \"CLEAR\":\r\n            return {\r\n                selectedItems: [],\r\n                itemsCounter: 0,\r\n                total: 0,\r\n                checkout: false\r\n            }\r\n        default: \r\n            return state;\r\n    }   \r\n}\r\n\r\nexport default cartReducer"]},"metadata":{},"sourceType":"module"}